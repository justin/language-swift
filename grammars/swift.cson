# reference https://macromates.com/manual/en/language_grammars

name: 'Swift'
scopeName: 'source.swift'
type: 'tree-sitter'
parser: 'tree-sitter-swift'

fileTypes: ['swift']

comments:
  start: '// '

scopes:
  'program': 'source.swift'

  'comment': [
    {
       # Identify 2-3 forward slashes as a line comment.
       match: "^//{2}",
       scopes: 'comment.line'
    },
    # Otherwise, assume it's a block comment.
    'comment.block'
  ]

  # Access Control
  'modifier': 'storage.modifier'
  '"override"': 'storage.modifier'
  '"static"': 'storage.modifier'
  '"lazy"': 'storage.modifier'
  '"weak"': 'storage.modifier'

  '"import"': 'keyword.control.directive'
  '"#if"': 'keyword.control.directive'
  '"#elseif"': 'keyword.control.directive'
  '"#else"': 'keyword.control.directive'
  '"#endif"': 'keyword.control.directive'
  'build_configuration_statement': 'keyword.control.directive'

  # Data types
  '"class"': 'keyword.class'
  '"struct"': 'keyword.struct'
  '"enum"': 'keyword.enum'
  '"protocol"': 'storage.type'
  '"extension"': 'storage.modifier'

  'class_declaration > identifier': 'storage.class'
  'class_declaration > modifier': 'storage.modifier'
  'struct_declaration > identifier': 'storage.struct'
  'struct_declaration > modifier': 'storage.modifier'

  '"if"': 'keyword.control'
  '"guard"': 'keyword.control'
  '"else"': 'keyword.control'
  '"do"': 'keyword.control'
  '"for"': 'keyword.control'
  '"while"': 'keyword.control'
  '"break"': 'keyword.control'
  '"continue"': 'keyword.control'
  '"return"': 'keyword.control'
  '"switch"': 'keyword.control'
  '"case"': 'keyword.control'
  '"default"': 'keyword.control'
  '"where"': 'keyword.control'
  '"throw"': 'keyword.control'
  '"try"': 'keyword.control'
  '"catch"': 'keyword.control'
  '"as"': 'keyword.control'
  '"in"': 'keyword.operator.in'
  "'associatedtype'": 'storage.type'
  "'typealias'": 'keyword.other.typealias'

  '"get"': 'keyword.operator.setter'
  '"set"': 'keyword.operator.setter'

  # Variables
  '"var"': 'storage.modifier'
  '"let"': 'storage.modifier'

  # Primitive Types
  'standard_type': 'support.type.swift'
  'type_identifier': 'support.type'
  'nil': 'constant.language.nil'
  'string': 'string.quoted.double'
  'boolean': 'constant.language.bool'
  'number': 'constant.numeric'
  "'Array'": 'support.storage.type'
  "'Dictionary'": 'support.storage.type'

  '
    variable_declaration > type,
    constant_declaration > type
  ': 'support.storage.type'

  '
    variable_declaration > modifier,
    constant_declaration > modifier': 'storage.modifier'
  '
    variable_declaration > identifier,
    constant_declaration > identifier
  ': 'support.variable'

  # Functions
  '"func"': 'keyword.function'
  'function_declaration > modifier': 'storage.modifier'
  'function_declaration > identifier': 'entity.name.function'
  'function_declaration > type': 'support.storage.type'
  'parameter_declaration > type': 'support.storage.type'
  '"throws"': 'keyword.control'
  '"rethrows"': 'keyword.control'

  # Protocols
  'protocol_declaration > identifier': 'storage.type.protocol'
  'protocol_declaration > modifier': 'storage.modifier'
  'associatedtype_declaration > identifier': 'entity.name.associatedtype'

  # Extensions
  'extension_declaration > identifier': 'storage.type'
